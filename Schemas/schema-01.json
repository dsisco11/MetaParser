{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "/MetaParser/parser/schema-01",
  "title": "Parser Definition Structure",
  "description": "A definition for an auto-generated meta-parser",
  "type": "object",
  "properties": {
    "namespace": {
      "type": "string",
      "description": "Namespace for the generated code to reside in"
    },
    "classname": {
      "type": "string",
      "description": "Name of the generated parser class"
    },
    "$type": {
      "type": "string",
      "description": "Determines the parsing system strategy for consuming data",
      "enum": ["span", "switch"]
    },
    "definitions": {
      "type": "object",
      "propertyNames": {
        "pattern": "^([\\w-]*)$"
      },
      "additionalProperties": {
        "type": "object",
        "required": [ "$type" ],
        "anyOf": [
          { "$ref": "#/$defs/def:token:constant" },
          { "$ref": "#/$defs/def:token:compound" },
          { "$ref": "#/$defs/def:token:complex" }
        ]
      }
    },
    "required": ["namespace", "definitions"]
  },
  "$defs": {
    "def:token:constant": {
      "properties": {
        "$type": { "const": "constant" },
        "value": {
          "oneOf": [
            { "$ref": "#/$defs/ref:value:constant" },
            {
              "type": "array",
              "items": { "$ref": "#/$defs/ref:value:constant" },
              "minItems": 1,
              "uniqueItems": true
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "def:token:compound": {
      "properties": {
        "$type": { "const": "compound" },
        "consume": {
          "oneOf": [
            { "$ref": "#/$defs/ref:value:single" },
            { "$ref": "#/$defs/ref:value:range" },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  { "$ref": "#/$defs/ref:value:single" },
                  { "$ref": "#/$defs/ref:value:range" }
                ]
              },
              "minItems": 1,
              "uniqueItems": true
            }
          ]
        },
        "additionalProperties": false
      }
    },
    "def:token:complex": {
      "type": "object",
      "properties": {
        "$type": { "const": "complex" },
        "start": {
          "description": "A prefix pattern for the token, used to detect the intended presence of the token to initiate the process of populating it",
          "$ref": "#/$defs/ref:tokenid:single_or_array"
        },
        "consume": {
          "description": "Set of valid items which this token may consume",
          "$ref": "#/$defs/ref:tokenid:single_or_array"
        },
        "stop": {
          "description": "Sequence which signifies the end of the token",
          "$ref": "#/$defs/ref:tokenid:single_or_array"
        },
        "escape": {
          "description": "A value which (when immediately preceeding it) will allow the token to ignore an occurance of its terminator and continue consuming items",
          "$ref": "#/$defs/ref:tokenid:single_or_array"
        },
        "additionalProperties": false
      },
      "required": [ "start" ]
    },
    "def:token:compound:values": {
      "values": {
        "type": "array",
        "items": { "$ref": "#/$defs/ref:value:single" }
      }
    },
    "ref:value:single": {
      "type": "string",
      "maxLength": 1
    },
    "ref:value:range": {
      "type": "object",
      "properties": {
        "range": {
          "type": "array",
          "items": { "$ref": "#/$defs/ref:value:single" },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "additionalProperties": false
    },
    "ref:array:value:single": {
      "type": "array",
      "items": { "$ref": "#/$defs/ref:value:single" },
      "minItems": 1,
      "uniqueItems": true
    },
    "ref:value:constant": {
      "type": "string"
    },
    "ref:array:value:constant": {
      "type": "array",
      "items": { "$ref": "#/$defs/ref:value:constant" },
      "minItems": 1,
      "uniqueItems": true
    },
    "ref:tokenid": {
      "description": "A token identifier",
      "type": "string",
      "pattern": "^([\\w-]*)$"
    },
    "ref:tokenid:array": {
      "type": "array",
      "items": { "$ref": "#/$defs/ref:tokenid" },
      "minItems": 1,
      "uniqueItems": true
    },
    "ref:tokenid:single_or_array": {
      "oneOf": [
        { "$ref": "#/$defs/ref:tokenid" },
        { "$ref": "#/$defs/ref:tokenid:array" }
      ]
    }
  }
}